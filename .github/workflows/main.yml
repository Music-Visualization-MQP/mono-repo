# Initial file copied from https://stackoverflow.com/a/64373702
# NOTE: Apparently GH provides its own runners? That's kinda cool!
name: Test
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
    # We can add more branches/regexes here if we want our dev branches to have constant testing too

jobs:
  test:
    name: Run development tests
    # runs-on: [self-hosted, linux]
    runs-on: ubuntu-latest
    # env:
      # COMPOSE_FILE: docker-compose.yml
      # DOCKER_USER: ${{ secrets.DOCKER_USER }}
      # DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

    steps:
    - name: Hello!
      run: echo "Hello, this line is just here to test that actions works as expected, I guess"
      
    - name: Checkout code
      uses: actions/checkout@v4 # This is very cool we do not need to manually checkout
      with:
        submodules: recursive

    # - name: Login to DockerHub
    #   run: docker login -u $DOCKER_USER -p $DOCKER_PASS

    # - name: Run Docker
    #   run: docker run

    - name: Setup env
      env: 
        ENV_SH_CONTENT: ${{ secrets.ENV_SH }}
        FRONTEND_SUPABASE: ${{ secrets.FRONTEND_SERVICE_KEY }}
      run: |
        echo "$ENV_SH_CONTENT" > env.sh
        chmod +x env.sh
        ./env.sh
        echo "$FRONTEND_SUPABASE" >> frontend/.env.local

      shell: bash

    - name: Build, run docker images
      # working-directory: ./mono-repo
              # ls -R
      run: |
        docker compose build
        docker compose up -d

    - name: Run frontend tests
      working-directory: frontend/
      run: |
        npm i
        npm i -g vitest
        npm run test
        echo "other test commands go here"

    - name: Run dataaq tests
      working-directory: data-acquisition/
      run: |
        npm i
        npm i -g vitest
        npm run test
        echo "other test commands go here"

    - name: Celebrate
      run: echo "Hurray! Nothing broke before this! At least I hope..."

    - name: down
      run: docker compose down 
